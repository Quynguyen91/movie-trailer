{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\OneDrive\\\\Desktop\\\\Funix\\\\React\\\\Assignment 02\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\browse\\\\MovieList\\\\MovieDetail\\\\MovieDetail.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport './MovieDetail.css';\nimport { API_KEY, IMAGE_BASE_URL } from \"../../../API\";\nfunction MovieDetail({\n  movie,\n  onClose\n}) {\n  const [trailerUrl, setTrailerUrl] = useState('');\n  useEffect(() => {\n    async function fetchTrailer() {\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${API_KEY}`);\n        const data = await response.json();\n        // Find the trailer movie that was clicked\n        const trailerMovie = data.results.find(movie => movie.site === 'YouTube' && movie.type === 'Trailer');\n        if (trailerMovie) {\n          setTrailerUrl(`https://www.youtube.com/embed/${trailerMovie.key}`);\n        } else {\n          setTrailerUrl(''); // Reset the trailer URL if no trailer is found\n        }\n      } catch (error) {\n        console.error('Error fetching trailer', error);\n      }\n    }\n    fetchTrailer();\n  }, [movie.id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MovieDetail_grid_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"MovieDetail_close\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MovieDetail_item_infor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"MovieDetail_item_infor-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, movie.title || movie.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"m-0 MovieDetail_item_infor-relaseDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Release Date: \", movie.release_date || movie.first_air_date), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"m-0 MovieDetail_item_infor-vote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Vote: \", movie.vote_average), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"MovieDetail_item_infor-vote--count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Vote count: \", movie.vote_count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, movie.overview || \"\")), trailerUrl ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MovieDetail-trailer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"100%\",\n    height: \"400\",\n    src: trailerUrl,\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true,\n    title: \"Movie Trailer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"img\", {\n    src: `${IMAGE_BASE_URL}${movie.backdrop_path}`,\n    alt: movie.title,\n    width: \"100%\",\n    height: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }));\n}\nexport default MovieDetail;","map":{"version":3,"names":["React","useState","useEffect","API_KEY","IMAGE_BASE_URL","MovieDetail","movie","onClose","trailerUrl","setTrailerUrl","fetchTrailer","response","fetch","id","data","json","trailerMovie","results","find","site","type","key","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","name","release_date","first_air_date","vote_average","vote_count","overview","width","height","src","frameBorder","allow","allowFullScreen","backdrop_path","alt"],"sources":["C:/Users/louis/OneDrive/Desktop/Funix/React/Assignment 02/Assignment 02 (Starter Code)/src/pages/browse/MovieList/MovieDetail/MovieDetail.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './MovieDetail.css';\r\nimport { API_KEY, IMAGE_BASE_URL } from \"../../../API\";\r\n\r\nfunction MovieDetail({ movie, onClose }) {\r\n  const [trailerUrl, setTrailerUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchTrailer() {\r\n      try {\r\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${API_KEY}`);\r\n        const data = await response.json();\r\n        // Find the trailer movie that was clicked\r\n        const trailerMovie = data.results.find(\r\n          movie => movie.site === 'YouTube' && movie.type === 'Trailer'\r\n        );\r\n        if (trailerMovie) {\r\n          setTrailerUrl(`https://www.youtube.com/embed/${trailerMovie.key}`);\r\n        } else {\r\n          setTrailerUrl(''); // Reset the trailer URL if no trailer is found\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching trailer', error);\r\n      }\r\n    }\r\n    fetchTrailer();\r\n  }, [movie.id]);\r\n\r\n  return (\r\n    <div className=\"MovieDetail_grid_container\">\r\n      <button className=\"MovieDetail_close\" onClick={onClose}>X</button>\r\n      <div className=\"MovieDetail_item_infor\">\r\n        <h3 className=\"MovieDetail_item_infor-title\">\r\n          {movie.title || movie.name}\r\n        </h3>\r\n        <p className=\"m-0 MovieDetail_item_infor-relaseDate\">\r\n          Release Date: {movie.release_date || movie.first_air_date}\r\n        </p>\r\n        <p className=\"m-0 MovieDetail_item_infor-vote\">\r\n          Vote: {movie.vote_average}\r\n        </p>\r\n        <p className=\"MovieDetail_item_infor-vote--count\">\r\n          Vote count: {movie.vote_count}\r\n        </p>\r\n        <p>{movie.overview || \"\"}</p>\r\n      </div>\r\n      {trailerUrl ? (\r\n        <div className=\"MovieDetail-trailer\">\r\n          <iframe\r\n            width=\"100%\"\r\n            height=\"400\"\r\n            src={trailerUrl}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            title=\"Movie Trailer\"\r\n          ></iframe>\r\n        </div>\r\n      ) : (\r\n        <img\r\n          src={`${IMAGE_BASE_URL}${movie.backdrop_path}`}\r\n          alt={movie.title}\r\n          width=\"100%\"\r\n          height=\"400\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}