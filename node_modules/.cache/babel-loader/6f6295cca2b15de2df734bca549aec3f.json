{"ast":null,"code":"export const API_KEY = '3152693dc53afc973e326322c9f36951';\nexport const BASE_URL = 'https://api.themoviedb.org/3'; // Base URL for the API\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/original'; // Base URL for the image paths\n\nexport const request = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`\n};\nexport async function fetchData(endpoint) {\n  try {\n    const response = await fetch(`${BASE_URL}${endpoint}`);\n    const data = await response.json();\n    // random a movie to show up for Banner\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching data', error);\n    return [];\n  }\n}","map":{"version":3,"names":["API_KEY","BASE_URL","IMAGE_BASE_URL","request","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","fetchData","endpoint","response","fetch","data","json","results","error","console"],"sources":["C:/Users/louis/OneDrive/Desktop/Funix/React/Assignment 02 (Starter Code)/Assignment 02 (Starter Code)/src/pages/API.jsx"],"sourcesContent":["export const API_KEY = '3152693dc53afc973e326322c9f36951';\r\nexport const BASE_URL = 'https://api.themoviedb.org/3'; // Base URL for the API\r\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/original'; // Base URL for the image paths\r\n\r\nexport const request  = {\r\n      fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n      fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n      fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n      fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n      fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n      fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n      fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n      fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n      fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\r\n};\r\n\r\n\r\nexport async function fetchData(endpoint) {\r\n            try{\r\n                  const response = await fetch(`${BASE_URL}${endpoint}`);\r\n                  const data = await response.json();\r\n                  // random a movie to show up for Banner\r\n                  return data.results;\r\n            }\r\n            catch (error) {\r\n                  console.error('Error fetching data', error);\r\n                  return [];\r\n            }\r\n      }\r\n   \r\n"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,kCAAkC;AACzD,OAAO,MAAMC,QAAQ,GAAG,8BAA8B,CAAC,CAAC;AACxD,OAAO,MAAMC,cAAc,GAAG,qCAAqC,CAAC,CAAC;;AAErE,OAAO,MAAMC,OAAO,GAAI;EAClBC,aAAa,EAAE,8BAA8BJ,OAAO,iBAAiB;EACrEK,qBAAqB,EAAE,wBAAwBL,OAAO,mBAAmB;EACzEM,aAAa,EAAE,4BAA4BN,OAAO,iBAAiB;EACnEO,iBAAiB,EAAE,2BAA2BP,OAAO,iBAAiB;EACtEQ,iBAAiB,EAAE,2BAA2BR,OAAO,iBAAiB;EACtES,iBAAiB,EAAE,2BAA2BT,OAAO,iBAAiB;EACtEU,kBAAkB,EAAE,2BAA2BV,OAAO,oBAAoB;EAC1EW,kBAAkB,EAAE,2BAA2BX,OAAO,iBAAiB;EACvEY,WAAW,EAAE,yBAAyBZ,OAAO;AACnD,CAAC;AAGD,OAAO,eAAea,SAASA,CAACC,QAAQ,EAAE;EAC9B,IAAG;IACG,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGf,QAAQ,GAAGa,QAAQ,EAAE,CAAC;IACtD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC;IACA,OAAOD,IAAI,CAACE,OAAO;EACzB,CAAC,CACD,OAAOC,KAAK,EAAE;IACRC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,OAAO,EAAE;EACf;AACN","ignoreList":[]},"metadata":{},"sourceType":"module"}