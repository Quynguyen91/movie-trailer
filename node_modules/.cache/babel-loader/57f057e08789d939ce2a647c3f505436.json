{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\OneDrive\\\\Desktop\\\\Funix\\\\React\\\\Assignment 02 (Starter Code)\\\\Assignment 02 (Starter Code)\\\\src\\\\MovieContext\\\\MovieContext.jsx\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { request, fetchData } from \"../pages/API\";\nconst MovieContext = createContext();\nexport const MovieProvider = ({\n  children\n}) => {\n  const [movieLists, setMovieLists] = useState({\n    Trending: [],\n    Originals: [],\n    TopRated: [],\n    ActionMovies: [],\n    ComedyMovies: [],\n    HorrorMovies: [],\n    RomanceMovies: [],\n    Documentaries: []\n  });\n\n  // create a random movie for banner\n  const [bannerMovie, setBannerMovie] = useState(null);\n\n  // useEffect to call API for each section movie\n  useEffect(() => {\n    async function initiallizeData() {\n      const Trending = await fetchData(request.fetchTrending);\n      const Originals = await fetchData(request.fetchNetflixOriginals);\n      const TopRated = await fetchData(request.fetchTopRated);\n      const ActionMovies = await fetchData(request.fetchActionMovies);\n      const ComedyMovies = await fetchData(request.fetchComedyMovies);\n      const HorrorMovies = await fetchData(request.fetchHorrorMovies);\n      const RomanceMovies = await fetchData(request.fetchRomanceMovies);\n      const Documantaries = await fetchData(request.fetchDocumentaries);\n      console.log('call API 6 times');\n      setMovieLists({\n        Trending,\n        Originals,\n        TopRated,\n        ActionMovies,\n        ComedyMovies,\n        HorrorMovies,\n        RomanceMovies,\n        Documantaries\n      });\n\n      // put all movies into an array\n      const allMovies = [...Trending, ...Originals, ...TopRated, ...ActionMovies, ...ComedyMovies, ...HorrorMovies, ...RomanceMovies, ...Documantaries];\n      const randomIndex = Math.floor(Math.random() * allMovies.length);\n      setBannerMovie(allMovies[randomIndex]);\n    }\n    initiallizeData();\n  }, []);\n  console.log('bannen movie', bannerMovie);\n  return /*#__PURE__*/React.createElement(MovieContext.Provider, {\n    value: {\n      movieLists,\n      bannerMovie\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, children);\n};\nexport default MovieContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","request","fetchData","MovieContext","MovieProvider","children","movieLists","setMovieLists","Trending","Originals","TopRated","ActionMovies","ComedyMovies","HorrorMovies","RomanceMovies","Documentaries","bannerMovie","setBannerMovie","initiallizeData","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","Documantaries","fetchDocumentaries","console","log","allMovies","randomIndex","Math","floor","random","length","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/louis/OneDrive/Desktop/Funix/React/Assignment 02 (Starter Code)/Assignment 02 (Starter Code)/src/MovieContext/MovieContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { request, fetchData } from \"../pages/API\";\r\n\r\nconst MovieContext = createContext();\r\n\r\nexport const MovieProvider = ({children}) => {\r\n      const [movieLists, setMovieLists] = useState({\r\n            Trending: [],\r\n            Originals: [], \r\n            TopRated: [], \r\n            ActionMovies: [], \r\n            ComedyMovies: [], \r\n            HorrorMovies: [], \r\n            RomanceMovies: [], \r\n            Documentaries: [],\r\n      })\r\n      \r\n      // create a random movie for banner\r\n      const [bannerMovie, setBannerMovie] = useState(null);\r\n\r\n   \r\n\r\n// useEffect to call API for each section movie\r\nuseEffect(()=> {\r\n      async function initiallizeData() {\r\n            const Trending = await fetchData(request.fetchTrending);\r\n            const Originals = await fetchData(request.fetchNetflixOriginals);\r\n            const TopRated = await fetchData(request.fetchTopRated);\r\n            const ActionMovies = await fetchData(request.fetchActionMovies);\r\n            const ComedyMovies = await fetchData(request.fetchComedyMovies);\r\n            const HorrorMovies = await fetchData(request.fetchHorrorMovies);\r\n            const RomanceMovies = await fetchData(request.fetchRomanceMovies);\r\n            const Documantaries = await fetchData(request.fetchDocumentaries);\r\n            console.log('call API 6 times')\r\n            setMovieLists({Trending, Originals, TopRated, ActionMovies, ComedyMovies, HorrorMovies, RomanceMovies, Documantaries,\r\n\r\n      })\r\n\r\n      // put all movies into an array\r\n      const allMovies = [...Trending, ...Originals, ...TopRated, ...ActionMovies, ...ComedyMovies, ...HorrorMovies, ...RomanceMovies, ...Documantaries];\r\n      const randomIndex = Math.floor(Math.random() * allMovies.length);\r\n      setBannerMovie(allMovies[randomIndex]);\r\n      }\r\n      initiallizeData();\r\n      \r\n}, []);\r\nconsole.log('bannen movie', bannerMovie)\r\n\r\nreturn (\r\n      <MovieContext.Provider value={{movieLists, bannerMovie}}>\r\n            {children}\r\n      </MovieContext.Provider>\r\n)\r\n}\r\n\r\nexport default MovieContext;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,OAAO,EAAEC,SAAS,QAAQ,cAAc;AAEjD,MAAMC,YAAY,GAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC;IACvCS,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE,EAAE;IACjBC,aAAa,EAAE;EACrB,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAI1D;EACAC,SAAS,CAAC,MAAK;IACT,eAAekB,eAAeA,CAAA,EAAG;MAC3B,MAAMV,QAAQ,GAAG,MAAMN,SAAS,CAACD,OAAO,CAACkB,aAAa,CAAC;MACvD,MAAMV,SAAS,GAAG,MAAMP,SAAS,CAACD,OAAO,CAACmB,qBAAqB,CAAC;MAChE,MAAMV,QAAQ,GAAG,MAAMR,SAAS,CAACD,OAAO,CAACoB,aAAa,CAAC;MACvD,MAAMV,YAAY,GAAG,MAAMT,SAAS,CAACD,OAAO,CAACqB,iBAAiB,CAAC;MAC/D,MAAMV,YAAY,GAAG,MAAMV,SAAS,CAACD,OAAO,CAACsB,iBAAiB,CAAC;MAC/D,MAAMV,YAAY,GAAG,MAAMX,SAAS,CAACD,OAAO,CAACuB,iBAAiB,CAAC;MAC/D,MAAMV,aAAa,GAAG,MAAMZ,SAAS,CAACD,OAAO,CAACwB,kBAAkB,CAAC;MACjE,MAAMC,aAAa,GAAG,MAAMxB,SAAS,CAACD,OAAO,CAAC0B,kBAAkB,CAAC;MACjEC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BtB,aAAa,CAAC;QAACC,QAAQ;QAAEC,SAAS;QAAEC,QAAQ;QAAEC,YAAY;QAAEC,YAAY;QAAEC,YAAY;QAAEC,aAAa;QAAEY;MAE7G,CAAC,CAAC;;MAEF;MACA,MAAMI,SAAS,GAAG,CAAC,GAAGtB,QAAQ,EAAE,GAAGC,SAAS,EAAE,GAAGC,QAAQ,EAAE,GAAGC,YAAY,EAAE,GAAGC,YAAY,EAAE,GAAGC,YAAY,EAAE,GAAGC,aAAa,EAAE,GAAGY,aAAa,CAAC;MACjJ,MAAMK,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,SAAS,CAACK,MAAM,CAAC;MAChElB,cAAc,CAACa,SAAS,CAACC,WAAW,CAAC,CAAC;IACtC;IACAb,eAAe,CAAC,CAAC;EAEvB,CAAC,EAAE,EAAE,CAAC;EACNU,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEb,WAAW,CAAC;EAExC,oBACMnB,KAAA,CAAAuC,aAAA,CAACjC,YAAY,CAACkC,QAAQ;IAACC,KAAK,EAAE;MAAChC,UAAU;MAAEU;IAAW,CAAE;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjDvC,QACgB,CAAC;AAE9B,CAAC;AAED,eAAeF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}