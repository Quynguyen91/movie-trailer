{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\OneDrive\\\\Desktop\\\\Funix\\\\React\\\\Assignment 02 (Starter Code)\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\browse\\\\MovieList\\\\MovieDetail\\\\MovieDetail.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport './MovieDetail.css';\nimport { API_KEY, IMAGE_BASE_URL } from \"../../../API\";\nfunction MovieDetail(item) {\n  const [trailerUrl, setTrailerUrl] = useState('');\n\n  // use useEffect to get api for trailer movie\n  useEffect(() => {\n    async function fetchTrailer() {\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${item.movie.id}/videos?api_key=${API_KEY}`);\n        const data = await response.json();\n        // find the trailer movie that was clicked\n        const trailerMovie = data.results.find(movie => movie.site === 'YouTube' && movie.type === 'Trailer');\n        if (trailerMovie) setTrailerUrl(`https://www.youtube.com/embed/${trailerMovie.key}`);\n      } catch (error) {\n        console.error('Error fetching trailer', error);\n      }\n    }\n    fetchTrailer();\n  }, [item.movie.id]);\n\n  // set btn close\n  const btnCloseHandle = () => {\n    setTrailerUrl(null);\n    IMAGE_BASE_URL = '';\n  };\n  console.log('selectmovie', item.movie);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MovieDetail_grid_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"MovieDetail_close\",\n    onClick: btnCloseHandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MovieDetail_item_infor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"MovieDetail_item_infor-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, item.movie.title ? item.movie.title : item.movie.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"m-0 MovieDetail_item_infor-relaseDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Release Date:   \", item.movie.release_date ? item.movie.release_date : item.movie.first_air_date), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"m-0 MovieDetail_item_infor-vote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Vote: \", item.movie.vote_average), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"MovieDetail_item_infor-vote--count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Vote count: \", item.movie.vote_count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, item.movie.overview ? item.movie.overview : \"\")), trailerUrl ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MovieDetail-trailer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"100%\",\n    height: \"400\",\n    src: trailerUrl ? trailerUrl : `${IMAGE_BASE_URL}${item.movie.backdrop_path}`,\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true,\n    title: \"Movie Trailer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 31\n    }\n  })) : /*#__PURE__*/React.createElement(\"img\", {\n    src: `${IMAGE_BASE_URL}${item.movie.backdrop_path}`,\n    alt: item.movie.title,\n    width: \"100%\",\n    height: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }));\n}\nexport default MovieDetail;","map":{"version":3,"names":["React","useState","useEffect","API_KEY","IMAGE_BASE_URL","MovieDetail","item","trailerUrl","setTrailerUrl","fetchTrailer","response","fetch","movie","id","data","json","trailerMovie","results","find","site","type","key","error","console","btnCloseHandle","log","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","name","release_date","first_air_date","vote_average","vote_count","overview","width","height","src","backdrop_path","frameborder","allow","allowFullScreen","alt"],"sources":["C:/Users/louis/OneDrive/Desktop/Funix/React/Assignment 02 (Starter Code)/Assignment 02 (Starter Code)/src/pages/browse/MovieList/MovieDetail/MovieDetail.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport './MovieDetail.css';\r\nimport { API_KEY, IMAGE_BASE_URL } from \"../../../API\";\r\n\r\nfunction MovieDetail(item) {\r\n\r\n      const [trailerUrl, setTrailerUrl] = useState('');\r\n      \r\n      // use useEffect to get api for trailer movie\r\n      useEffect(()=> {\r\n            async function fetchTrailer() {\r\n                  try {\r\n                        const response = await fetch(`https://api.themoviedb.org/3/movie/${item.movie.id}/videos?api_key=${API_KEY}`);\r\n                        const data = await response.json();\r\n                        // find the trailer movie that was clicked\r\n                        const trailerMovie = data.results.find(movie => (movie.site === 'YouTube' && movie.type === 'Trailer'));\r\n                        if (trailerMovie) \r\n                              setTrailerUrl(`https://www.youtube.com/embed/${trailerMovie.key}`);\r\n                  }\r\n                  catch (error) {\r\n                        console.error('Error fetching trailer', error);\r\n                  }\r\n            }\r\n            fetchTrailer();\r\n\r\n      }, [item.movie.id])\r\n\r\n      // set btn close\r\n      const btnCloseHandle = ()=> {\r\n            setTrailerUrl(null);\r\n            IMAGE_BASE_URL = ''\r\n      }\r\n\r\n      console.log('selectmovie', item.movie);\r\n      return (    \r\n            <div className=\"MovieDetail_grid_container\">\r\n                  <button className=\"MovieDetail_close\" onClick={btnCloseHandle}>X</button>\r\n                  <div className=\"MovieDetail_item_infor\">\r\n                        <h3 className=\"MovieDetail_item_infor-title\">\r\n                              {item.movie.title ? item.movie.title : item.movie.name}\r\n                        </h3>\r\n                        <p className=\"m-0 MovieDetail_item_infor-relaseDate\">\r\n                            Release Date:   {item.movie.release_date ? item.movie.release_date : item.movie.first_air_date}\r\n                        </p>\r\n                        <p className=\"m-0 MovieDetail_item_infor-vote\">\r\n                              Vote: {item.movie.vote_average}\r\n                        </p>\r\n                        <p className=\"MovieDetail_item_infor-vote--count\">\r\n                              Vote count: {item.movie.vote_count}\r\n                        </p>\r\n                        <p>{item.movie.overview ? item.movie.overview : \"\"}</p>\r\n\r\n                  </div>\r\n                  {trailerUrl ? (\r\n                        <div className=\"MovieDetail-trailer\">\r\n                              <iframe \r\n                              width='100%'\r\n                            height=\"400\"\r\n                              src= {trailerUrl ? trailerUrl : `${IMAGE_BASE_URL}${item.movie.backdrop_path}`}\r\n                              frameborder=\"0\"\r\n                              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                              allowFullScreen\r\n                              title=\"Movie Trailer\"\r\n                              ></iframe>\r\n\r\n                        </div>\r\n                  )\r\n                  : (\r\n                        <img \r\n                        src={`${IMAGE_BASE_URL}${item.movie.backdrop_path}`}\r\n                        alt={item.movie.title}\r\n                        width=\"100%\"\r\n                        height=\"400\"\r\n                        />\r\n                  )\r\n\r\n                  }\r\n\r\n            </div>\r\n      )\r\n}\r\n\r\nexport default MovieDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}