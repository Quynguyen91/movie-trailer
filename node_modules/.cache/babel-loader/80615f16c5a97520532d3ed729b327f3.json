{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\OneDrive\\\\Desktop\\\\Funix\\\\React\\\\Assignment 02\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\browse\\\\MovieList\\\\MovieDetail\\\\MovieDetail.jsx\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { API_KEY, IMAGE_BASE_URL } from \"../../../API\";\nimport { setTrailerUrl } from \"../../../../redux/movieDetail_redux/movieDetailAction\";\nimport './MovieDetail.css';\nfunction MovieDetail({\n  movie,\n  onClose\n}) {\n  const dispatch = useDispatch();\n  const trailerUrl = useSelector(state => state.movieDetail.trailer_url);\n\n  // use useEffect to get api for trailer movie\n  useEffect(() => {\n    async function fetchTrailer() {\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${API_KEY}`);\n        const data = await response.json();\n        // find the trailer movie that was clicked\n        const trailerMovie = data.results.find(movie => movie.site === 'YouTube' && movie.type === 'Trailer');\n        if (trailerMovie) dispatch(setTrailerUrl(`https://www.youtube.com/embed/${trailerMovie.key}`));else dispatch(setTrailerUrl(''));\n      } catch (error) {\n        console.error('Error fetching trailer', error);\n      }\n    }\n    fetchTrailer();\n  }, [movie.id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MovieDetail_grid_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"MovieDetail_close\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MovieDetail_item_infor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"MovieDetail_item_infor-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, movie.title ? movie.title : movie.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"m-0 MovieDetail_item_infor-relaseDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Release Date:   \", movie.release_date ? movie.release_date : movie.first_air_date), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"m-0 MovieDetail_item_infor-vote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Vote: \", movie.vote_average), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"MovieDetail_item_infor-vote--count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Vote count: \", movie.vote_count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, movie.overview ? movie.overview : \"\")), trailerUrl ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MovieDetail-trailer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"100%\",\n    height: \"400\",\n    src: trailerUrl ? trailerUrl : `${IMAGE_BASE_URL}${movie.backdrop_path}`,\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true,\n    title: \"Movie Trailer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 31\n    }\n  })) : /*#__PURE__*/React.createElement(\"img\", {\n    src: `${IMAGE_BASE_URL}${movie.backdrop_path}`,\n    alt: movie.title,\n    width: \"100%\",\n    height: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }));\n}\nexport default MovieDetail;","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","API_KEY","IMAGE_BASE_URL","setTrailerUrl","MovieDetail","movie","onClose","dispatch","trailerUrl","state","movieDetail","trailer_url","fetchTrailer","response","fetch","id","data","json","trailerMovie","results","find","site","type","key","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","name","release_date","first_air_date","vote_average","vote_count","overview","width","height","src","backdrop_path","frameborder","allow","allowFullScreen","alt"],"sources":["C:/Users/louis/OneDrive/Desktop/Funix/React/Assignment 02/Assignment 02 (Starter Code)/src/pages/browse/MovieList/MovieDetail/MovieDetail.jsx"],"sourcesContent":["import React, { useEffect} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { API_KEY, IMAGE_BASE_URL } from \"../../../API\";\r\nimport { setTrailerUrl } from \"../../../../redux/movieDetail_redux/movieDetailAction\";\r\nimport './MovieDetail.css';\r\n\r\nfunction MovieDetail({movie, onClose}) {\r\n      const dispatch = useDispatch();\r\n      const trailerUrl = useSelector((state) => state.movieDetail.trailer_url);\r\n      \r\n      // use useEffect to get api for trailer movie\r\n      useEffect(()=> {\r\n            async function fetchTrailer() {\r\n                  try {\r\n                        const response = await fetch(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${API_KEY}`);\r\n                        const data = await response.json();\r\n                        // find the trailer movie that was clicked\r\n                        const trailerMovie = data.results.find(movie => (movie.site === 'YouTube' && movie.type === 'Trailer'));\r\n                        if (trailerMovie) \r\n                              dispatch(setTrailerUrl(`https://www.youtube.com/embed/${trailerMovie.key}`));\r\n                        else dispatch(setTrailerUrl(''));\r\n                  }\r\n                  catch (error) {\r\n                        console.error('Error fetching trailer', error);\r\n                  }\r\n            }\r\n            fetchTrailer();\r\n\r\n      }, [movie.id])\r\n\r\n      return (    \r\n            \r\n            <div className=\"MovieDetail_grid_container\">\r\n                  <button className=\"MovieDetail_close\" onClick={onClose}>X</button>\r\n                  <div className=\"MovieDetail_item_infor\">\r\n                        <h3 className=\"MovieDetail_item_infor-title\">\r\n                              {movie.title ? movie.title : movie.name}\r\n                        </h3>\r\n                        <p className=\"m-0 MovieDetail_item_infor-relaseDate\">\r\n                            Release Date:   {movie.release_date ? movie.release_date : movie.first_air_date}\r\n                        </p>\r\n                        <p className=\"m-0 MovieDetail_item_infor-vote\">\r\n                              Vote: {movie.vote_average}\r\n                        </p>\r\n                        <p className=\"MovieDetail_item_infor-vote--count\">\r\n                              Vote count: {movie.vote_count}\r\n                        </p>\r\n                        <p>{movie.overview ? movie.overview : \"\"}</p>\r\n\r\n                  </div>\r\n                  {trailerUrl ? (\r\n                        <div className=\"MovieDetail-trailer\">\r\n                              <iframe \r\n                              width='100%'\r\n                            height=\"400\"\r\n                              src= {trailerUrl ? trailerUrl : `${IMAGE_BASE_URL}${movie.backdrop_path}`}\r\n                              frameborder=\"0\"\r\n                              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                              allowFullScreen\r\n                              title=\"Movie Trailer\"\r\n                              ></iframe>\r\n\r\n                        </div>\r\n                  )\r\n                  : (\r\n                        <img \r\n                        src={`${IMAGE_BASE_URL}${movie.backdrop_path}`}\r\n                        alt={movie.title}\r\n                        width=\"100%\"\r\n                        height=\"400\"\r\n                        />\r\n                  )\r\n\r\n                  }\r\n\r\n            </div>\r\n      )\r\n}\r\n\r\nexport default MovieDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}