{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\OneDrive\\\\Desktop\\\\Funix\\\\React\\\\Assignment 02 (Starter Code)\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\browse\\\\BannerMovie\\\\BannerMovie.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './BannerMovie.css';\nimport MovieList from '../MovieList/MovieList';\nimport { BASE_URL, request } from '../../API';\nfunction BannerMovie() {\n  const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/original'; // Base URL for the image paths\n\n  const [randomeMovie, setRandomeMovie] = useState(null);\n  const [movieList, setMovieList] = useState({\n    Trending: [],\n    Originals: [],\n    TopRated: [],\n    ActionMovies: [],\n    ComedyMovies: [],\n    HorrorMovies: [],\n    RomanceMovies: [],\n    Documentaries: []\n  });\n  console.log('effect movies', movieList);\n  useEffect(() => {\n    async function fetchData(endpoint) {\n      try {\n        const response = await fetch(`${BASE_URL}${endpoint}`);\n        const data = await response.json();\n        // random a movie to show up for Banner\n        const randomIndex = Math.floor(Math.random() * data.results.length);\n        setRandomeMovie(data.results[randomIndex]);\n        return data.results;\n      } catch (error) {\n        console.error('Error fetching data', error);\n      }\n    }\n    async function initiallizeData() {\n      const Trending = await fetchData(request.fetchTrending);\n      const Originals = await fetchData(request.fetchNetflixOriginals);\n      const TopRated = await fetchData(request.fetchTopRated);\n      const ActionMovies = await fetchData(request.fetchActionMovies);\n      const HorrorMovies = await fetchData(request.fetchHorrorMovies);\n      const RomanceMovies = await fetchData(request.fetchRomanceMovies);\n      const Documentaries = await fetchData(request.fetchDocumentaries);\n      setMovieList({\n        Trending,\n        Originals,\n        TopRated,\n        ActionMovies,\n        HorrorMovies,\n        RomanceMovies,\n        Documentaries\n      });\n    }\n    initiallizeData();\n  }, []);\n  console.log('random', randomeMovie);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, randomeMovie ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"BannerMovie_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"BannerMovie_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 31\n    }\n  }, randomeMovie.title), /*#__PURE__*/React.createElement(\"img\", {\n    src: `${IMAGE_BASE_URL}${randomeMovie.backdrop_path}`,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"BannerMovie_buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }\n  }, \"Play\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 37\n    }\n  }, \"Mylist\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"bannerMovie_overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 31\n    }\n  }, randomeMovie.overview)), movieList && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(MovieList, {\n    title: \"Originals\",\n    items: movieList.Originals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    title: \"Trending\",\n    items: movieList.Trending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    title: \"TopRated\",\n    items: movieList.TopRated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    title: \"ActionMoives\",\n    items: movieList.ActionMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    title: \"HorroMovies\",\n    items: movieList.HorrorMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    title: \"RomanceMovies\",\n    items: movieList.RomanceMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    title: \"Documentaries\",\n    items: movieList.Documentaries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }\n  }))) : '');\n}\nexport default BannerMovie;","map":{"version":3,"names":["React","useState","useEffect","MovieList","BASE_URL","request","BannerMovie","IMAGE_BASE_URL","randomeMovie","setRandomeMovie","movieList","setMovieList","Trending","Originals","TopRated","ActionMovies","ComedyMovies","HorrorMovies","RomanceMovies","Documentaries","console","log","fetchData","endpoint","response","fetch","data","json","randomIndex","Math","floor","random","results","length","error","initiallizeData","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","src","backdrop_path","alt","overview","items"],"sources":["C:/Users/louis/OneDrive/Desktop/Funix/React/Assignment 02 (Starter Code)/Assignment 02 (Starter Code)/src/pages/browse/BannerMovie/BannerMovie.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './BannerMovie.css';\r\nimport MovieList from '../MovieList/MovieList';\r\nimport { BASE_URL, request } from '../../API';\r\n\r\nfunction BannerMovie() {\r\n      const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/original'; // Base URL for the image paths\r\n\r\n      const [randomeMovie, setRandomeMovie] = useState(null);\r\n      const [movieList, setMovieList] = useState({\r\n            Trending: [],\r\n            Originals: [],\r\n            TopRated: [],\r\n            ActionMovies: [],\r\n            ComedyMovies: [],\r\n            HorrorMovies: [],\r\n            RomanceMovies: [],\r\n            Documentaries: [], \r\n      });\r\n      \r\n\r\n      console.log('effect movies',movieList)\r\n      useEffect(()=> {\r\n            async function fetchData(endpoint) {\r\n                  try{\r\n                        const response = await fetch(`${BASE_URL}${endpoint}`);\r\n                        const data = await response.json();\r\n                        // random a movie to show up for Banner\r\n                        const randomIndex = Math.floor(Math.random() * data.results.length)\r\n                        setRandomeMovie(data.results[randomIndex]);\r\n                        return data.results;\r\n                  }\r\n                  catch (error) {\r\n                        console.error('Error fetching data', error);\r\n                  }\r\n            }\r\n            async function initiallizeData(){\r\n                  const Trending = await fetchData(request.fetchTrending);\r\n                  const Originals = await fetchData(request.fetchNetflixOriginals);\r\n                  const TopRated = await fetchData(request.fetchTopRated);\r\n                  const ActionMovies = await fetchData(request.fetchActionMovies);\r\n                  const HorrorMovies = await fetchData(request.fetchHorrorMovies);\r\n                  const RomanceMovies = await fetchData(request.fetchRomanceMovies);\r\n                  const Documentaries = await fetchData(request.fetchDocumentaries);\r\n                  setMovieList({Trending, Originals, TopRated, ActionMovies, HorrorMovies, RomanceMovies, Documentaries});\r\n            }\r\n\r\n            initiallizeData();\r\n      }, []);\r\n\r\n\r\n      console.log('random',randomeMovie)\r\n      return(\r\n            <>\r\n                  {randomeMovie ? \r\n                  <>\r\n                        <div className='BannerMovie_container'>\r\n                        \r\n                              <div className='BannerMovie_title'>\r\n                                    {randomeMovie.title} \r\n                              </div>\r\n                              <img src={`${IMAGE_BASE_URL}${randomeMovie.backdrop_path}`} alt=\"\" />\r\n                              <div className='BannerMovie_buttons'>\r\n                                    <button>\r\n                                          Play\r\n                                    </button>\r\n                                    <button>\r\n                                          Mylist\r\n                                    </button>\r\n                              </div>\r\n                              <p className='bannerMovie_overview'>{randomeMovie.overview}</p>\r\n                        </div>\r\n                        {movieList &&\r\n                              <div>\r\n                                    <MovieList title = 'Originals' items= {movieList.Originals}/>\r\n                                    <MovieList title = 'Trending' items= {movieList.Trending}/>\r\n                                    <MovieList title = 'TopRated' items= {movieList.TopRated}/>\r\n                                    <MovieList title = 'ActionMoives' items= {movieList.ActionMovies}/>\r\n                                    <MovieList title = 'HorroMovies' items= {movieList.HorrorMovies}/>\r\n                                    <MovieList title = 'RomanceMovies' items= {movieList.RomanceMovies}/>\r\n                                    <MovieList title = 'Documentaries' items= {movieList.Documentaries}/>\r\n                              </div>\r\n                        }\r\n                        {/* <movieDetail show={}/> */}\r\n                  </>\r\n                  : ''\r\n                  }\r\n            </>\r\n      )\r\n}\r\nexport default BannerMovie;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}