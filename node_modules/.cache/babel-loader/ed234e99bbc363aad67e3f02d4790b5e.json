{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\OneDrive\\\\Desktop\\\\Funix\\\\React\\\\Assignment 02\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\search\\\\ResultList\\\\ResultList.jsx\";\nimport React, { useCallback, useContext, useState } from \"react\";\nimport MovieSearchContext from \"../../../MovieSearchContext/MovieSearchContext\";\nimport MovieDetail from \"../../browse/MovieList/MovieDetail/MovieDetail\";\nimport { IMAGE_BASE_URL } from \"../../API\";\nimport './resultList.css';\nfunction ResultList() {\n  const {\n    resultSearch\n  } = useContext(MovieSearchContext);\n  const [selectMovie, setSelectMovie] = useState(null);\n  console.log('result search', resultSearch);\n  // handle when click the movie\n  const handleSelectMovie = useCallback(item => {\n    setSelectMovie(preMovieSelect => preMovieSelect && preMovieSelect.id === item.id ? null : item);\n  }, []);\n\n  // handle close button\n  const handleCloseBtn = () => {\n    setSelectMovie(null);\n  };\n\n  // display item's image if the search list show an item which doesn't have an image\n  const getBackdropFrom_Know_for = knowFor => {\n    if (knowFor) {\n      return;\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resultList_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }\n  }, \"Search Result\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SearchMovieList_grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }\n  }, resultSearch.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"SearchMovie_item\",\n    onClick: () => handleSelectMovie(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.poster_patth ? `${IMAGE_BASE_URL}${item.poster_patth}` : `${IMAGE_BASE_URL}${item.backdrop_path}`,\n    alt: item.title || item.name,\n    className: \"searchMovieList_item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 43\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"SearchMovieItem_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 43\n    }\n  }, item.title || item.name)))), selectMovie && /*#__PURE__*/React.createElement(MovieDetail, {\n    movie: selectMovie,\n    onClose: handleCloseBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }));\n}\nexport default ResultList;","map":{"version":3,"names":["React","useCallback","useContext","useState","MovieSearchContext","MovieDetail","IMAGE_BASE_URL","ResultList","resultSearch","selectMovie","setSelectMovie","console","log","handleSelectMovie","item","preMovieSelect","id","handleCloseBtn","getBackdropFrom_Know_for","knowFor","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","index","key","onClick","src","poster_patth","backdrop_path","alt","title","name","movie","onClose"],"sources":["C:/Users/louis/OneDrive/Desktop/Funix/React/Assignment 02/Assignment 02 (Starter Code)/src/pages/search/ResultList/ResultList.jsx"],"sourcesContent":["import React, { useCallback, useContext, useState } from \"react\";\r\nimport MovieSearchContext from \"../../../MovieSearchContext/MovieSearchContext\";\r\nimport MovieDetail from \"../../browse/MovieList/MovieDetail/MovieDetail\";\r\nimport { IMAGE_BASE_URL } from \"../../API\";\r\nimport './resultList.css';\r\n\r\nfunction ResultList() {\r\n      const {resultSearch} = useContext(MovieSearchContext);\r\n      const [selectMovie, setSelectMovie] = useState(null);\r\n      console.log('result search', resultSearch)\r\n      // handle when click the movie\r\n      const handleSelectMovie = useCallback((item)=> {\r\n           setSelectMovie((preMovieSelect) => (preMovieSelect && preMovieSelect.id === item.id) ? null : item);\r\n            \r\n      }, []);\r\n\r\n      // handle close button\r\n      const handleCloseBtn = ()=> {\r\n            setSelectMovie(null)\r\n      }\r\n\r\n      // display item's image if the search list show an item which doesn't have an image\r\n      const getBackdropFrom_Know_for = (knowFor) => {\r\n            if(knowFor) {\r\n                  return \r\n            }\r\n      }\r\n\r\n      return (\r\n             <div className=\"resultList_container\">\r\n                  <h4 className=\"mb-5\">Search Result</h4>\r\n                  <div className=\"SearchMovieList_grid\">\r\n                        {\r\n                              resultSearch.map((item, index) => (\r\n                                    <div key={index} className=\"SearchMovie_item\" onClick={() => handleSelectMovie(item)}>\r\n                                          <img \r\n                                                src={item.poster_patth ? `${IMAGE_BASE_URL}${item.poster_patth}`\r\n                                                :`${IMAGE_BASE_URL}${item.backdrop_path}`}\r\n                                                alt={item.title || item.name}\r\n                                                className=\"searchMovieList_item\"\r\n                                          />\r\n                                          <p className=\"SearchMovieItem_title\">{item.title || item.name}</p>\r\n                                    </div>\r\n                              ))\r\n                        }\r\n                  </div>\r\n                  {selectMovie &&\r\n                        <MovieDetail movie= {selectMovie} onClose = {handleCloseBtn} />\r\n                  }\r\n\r\n      </div>\r\n      )\r\n}\r\n\r\nexport default ResultList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}